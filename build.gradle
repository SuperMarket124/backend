buildscript {
    ext {
        springBootVersion = '2.5.0'
        querydslPluginVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}
repositories {
    mavenCentral()
}

subprojects {
    group 'com.market'
    version '1.0'

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }
}
project(':market-api') {
    dependencies {
        implementation project(':market-common')
        implementation project(':market-core')

        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'

        runtimeOnly group: 'com.h2database', name: 'h2', version: '1.4.200'
        implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    }
}
project(':market-common') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    }
}
project(':market-core') {
    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation project(':market-common')

        implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind'

        //cache
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
        compile group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.3'

        //commons-lang
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

        //p6spy
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

        compile("com.querydsl:querydsl-core")
        compile("com.querydsl:querydsl-jpa")
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
        annotationProcessor("jakarta.persistence:jakarta.persistence-api")
        annotationProcessor("jakarta.annotation:jakarta.annotation-api")
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
        runtimeOnly group: 'com.h2database', name: 'h2', version: '1.4.200'
    }
    def generated = "src/main/generated"

    sourceSets {
        main.java.srcDirs += [generated]
    }

    tasks.withType(JavaCompile) {
        options.annotationProcessorGeneratedSourcesDirectory = file(generated)
    }

    clean.doLast {
        file(generated).deleteDir()
    }
}